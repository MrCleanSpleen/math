#!/usr/bin/env python3
import time 
import skilstak.colors as c
def aarea():
    print(c.cl + """
    c = area of a circle
    s = area of a square, 
    tr = area of a triangle
    t = area of a trapezoid""")
def asurface():
    print(c.cl + """
    hp = hexagonal prism surface area
    rp = rectangular pyramid surface area
    hs = hemisphere surface area
    sp = square pyramid surface area
    st for triangular prism surface area
    sc for cube surface area, 
    oc = octohedron surface area
    rs = rectangular prism surface area, 
    sps = sphere surface area
    cs = cylinder surface area,
    co = cone surface area
    tp = triangular pyramid surface area""")
def avolume():
    print(c.cl + """
    cu = volume of a cube,
    vrp = volume of rectangular pyramid
    vr = volume of rectangular prism
    sh = volume of a sphere,
    vtp = volume of a tri pyramid
    cv = cone volume
    vsp = square pyramid volume
    hm = hemisphere volume
    vh = hexagonal prism volume
    voc = volume of an octahedron
    vt = triangular prism volume
    vc = cylinder volume""")
def agraph():
    print(c.cl + """    
    GRAPHING
    is = inequality solver
    y = equation solver, 
    ss = system solver, 
    si = system of inequalities""")

def amisc():
    print(c.cl + """
    pt = pythagorean theorem, 
    df = find distance between 2 points
    pc = perimeter of a circle
    sir = simple interest,
    ci = compound interest
    pow = exponents and powers
    sr = square root a number""")

def intro():
    print(c.clear + c.multi("Welcome to the Ultimate Calculator") + c.x)
    print("""What category?
    v = volume calculators
    g = graphing calculators
    m = other/ formulas
    a = area of 2-D shapes
    s = surface area calculators
    n = number calculators

    """)

if __name__ == '__main__':
    try:
        intro()
        category = input(">>> ")
        if category == "v":
            avolume()
        elif category == "g":
            agraph()
        elif category == "m":
            amisc()
        elif category == "a":
            aarea()
        elif category == "s":
            asurface()
        elif category == "n":
            print("Copy this into your browser")
            print("""
https://www.google.com/search?espv=2&q=google+calculator&oq=google+cal
&gs_l=serp.1.1.0i131j0i20j0i10j0j0i131l2j0l4.51023.53960.0.55414.13.12.1.0.0.0.126.1233
.4j8.12.0....0...1c.1.64.serp..1.12.1159.0.ZZaV1XeCKhw""")
        else:
            import troll as t
            t.trollface()
            time.sleep(3)
        inpt = input(">>> ")
        import misc  as r
        import area as a
        import surface as s
        import volume as v
        import graph as g
        import troll as t
        if inpt == "---":
            print(c.cl)
            exit()
        elif inpt == "ci":
            print(c.cl)
            r.solve_compound()
        elif inpt == "pow":
            print(c.cl)
            r.power()
        elif inpt == "st":
            """surface area tri prism"""
            print(c.cl)
            s.satriprism()
        elif inpt == "sir":
            print(c.cl)
            r.solve_interest()
        elif inpt == "vc":
            print(c.cl)
            v.vcylinder()
        elif inpt == "voc":
            print(c.cl)
            v.voctahedron()
        elif inpt == "vt":
            print(c.cl)
            v.vtriprism()
        elif inpt == "hm":
            print(c.cl)
            v.vhemisphere()
        elif inpt == "vh":
            print(c.cl)
            v.vhexagon()
        elif inpt == "vtp":
            print(c.cl)
            v.vtripyramid()
        elif inpt == "cv":
            print(c.cl)
            v.solve_cone()
        elif inpt == "vrp":
            print(c.cl)
            v.vrectpyramid()
        elif inpt == "vsp":
            print(c.cl)
            v.solve_sqpyramid()
        elif inpt == "vr":
            print(c.cl)
            v.vsolve_rect()
        elif inpt == "is":
            print(c.cl)
            g.solve_inequality()
        elif inpt == "si":
            print(c.cl)
            g.solve_inequality2()
        elif inpt == "oc":
            print(c.cl)
            s.octahedron()
        elif inpt == "hs":
            print(c.cl)
            s.hemisphere()
        elif inpt == "rs":
            """surface area rect prism"""
            print(c.cl)
            s.rectsurface()
        elif inpt == "co":
            print(c.cl)
            s.conesurface()
        elif inpt == "tp":
            print(c.cl)
            s.tripyramid()
        elif inpt == "rp":
            """surface area rect pyramid"""
            print(c.cl)
            s.rectpyramid()
        elif inpt == "sps":
            """surface area sphere"""
            print(c.cl)
            s.spheresurface()
        elif inpt == "sp":
            """surface area square pyramid"""
            print(c.cl)
            s.squarepyramid()
        elif inpt == "pc":
            """circum. of a circle"""
            print(c.cl)
            r.solve_percircle()
        elif inpt == "sc":
            """surface area cube"""
            print(c.cl)
            s.sacube()
        elif inpt == "c":
            """area of a circle"""
            print(c.clear)
            a.solve_circle()
        elif inpt == "s":
            """area of a square"""
            print(c.clear)
            a.solve_square()
        elif inpt == "tr":
            """area of a triangle"""
            print(c.clear)
            a.solve_triangle()
        elif inpt == "t":
            """area of a trapezoid"""
            print(c.clear)
            a.solve_trapazoid()
        elif inpt == "y":
            print(c.clear)
            """Equation solver"""
            g.solve_system()
        elif inpt == "pt":
            """solves A^2 + B^2 = C^2"""
            print(c.clear)
            r.solve_py()
        elif inpt == "ss":
            """solves a system"""
            print(c.clear)
            g.solve_system2()
        elif inpt == "cu":
            """finds volume of a cube"""
            print(c.cl)
            v.solve_cube()
        elif inpt == "sh":
            """find volume of a sphere"""
            print(c.cl)
            v.solvesphere()
        elif inpt == "sr":
            """square root a number"""
            print(c.cl)
            r.solve_squareroot()
        elif inpt == "cs":
            """surface area cylinder"""
            print(c.cl)
            s.cylindersurface()
        elif inpt == "hp":
            print(c.cl)
            s.hexagon()
        elif inpt == "df":
            print(c.cl)
            r.solve_distance()
        elif inpt == "spt":
            print(c.cl)
            g.solve_points()
        else:
            t.trollface()
    except KeyboardInterrupt:
        exit()
        print(c.cl)
